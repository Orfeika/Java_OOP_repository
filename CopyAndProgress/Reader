import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.LinkedList;

public class Reader implements Runnable {
	private String source;
	private String destination; 
	private int counter =1; 
	
	
public Reader(String source, String destination) {
		super();
		this.source = source;
		this.destination = destination;
	}


public Reader(String source) {
		this.source = source;
		File file = new File(source);
	}
	

	public int getCounter() {
	return counter;
}





	public String getPath() {
	return destination;
}





	public synchronized boolean copyFiles(String source, String destination) throws IOException {
		FileInputStream is = new FileInputStream(source);
		FileOutputStream os = new FileOutputStream(destination);
		File fileDestination = new File(destination);
		counter =1; 
		byte[] buffer = new byte[8192];
		int lenght;
		while ((lenght = is.read(buffer)) > 0) {
			os.write(buffer, 0, lenght);
			counter++;
			
		}
		return true;
	
		
	
		}


	@Override
	public void run() {
		try {
			copyFiles (source,destination);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}


	

	
}
