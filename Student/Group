import java.util.Arrays;

public class Group {
	private Student studentsGroup[] = new Student[10];
	private int  counter = 0; 
	
		

	public Group() {
		super();
	}

	public Group(Student[] studentsGroup) {
		super();
		this.studentsGroup = studentsGroup;
	}
	
	
	

	public Student[] getStudentsGroup() {
		return studentsGroup;
	}



	public void addStudenTtoGroup(Student student) throws ExceptionGroupSize {
		if (counter>studentsGroup.length){
			throw new ExceptionGroupSize();
		}
		 else {
				studentsGroup[counter] = student;
				counter++;
			}
		

	}
	
	public int searchStudent(Student student){
		
		for (int i =0; i<studentsGroup.length; i++){
			if(studentsGroup[i].getSecondName().equals(student.getSecondName())&&
					studentsGroup[i].getFirstName().equals(student.getFirstName()) ){
				return i;
			}
		
		}
					return -1;
		
		
	}
	
	public void removeStudentFromGroup(Student student){
		int idx = searchStudent(student);
		if (idx!=-1){
		for (int i = idx, n =studentsGroup.length-2 ; i < n ; i++) {
			studentsGroup[i]=studentsGroup[i+1];	
		}
		studentsGroup[studentsGroup.length-1]=null;
		counter--; 
		}
		else{
			System.out.println("Group is empty");
		}
		
	}
	
	public void sortBySecondName(){
		Arrays.sort(this.getStudentsGroup(), Student.StudentNameComparator);
	}

	@Override
	public String toString() {
		for(int i = 0; i<studentsGroup.length;i++){
			System.out.println(studentsGroup[i]);
		}
		return "";
	}
	

}

